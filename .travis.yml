language: node_js

image: docker

services:
  - docker

before_install:
  - docker info
  - sudo apt-get update
  - sudo apt-get install bash grep
  - if [ -z $VERSION ]; then VERSION=$(echo $TRAVIS_COMMIT_MESSAGE | grep -oP "(?<=##)(.*)(?=##)"); fi

# script:
#   - if [ $TRAVIS_BRANCH == dev ]; then docker version && docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD && docker build -t $DOCKER_HUB_SLUG:$VERSION-dev . && docker push $DOCKER_HUB_SLUG:$VERSION-dev; fi
#   - if [ $TRAVIS_BRANCH == master ]; then docker version && docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD && docker build -t $DOCKER_HUB_SLUG:$VERSION . && docker push $DOCKER_HUB_SLUG:$VERSION; fi

stages:
  - name: build-master
    if: branch = master
  - name: build-dev
    if: branch = dev

docker_login:
  before_script: 
    # - docker version
    # - docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
    - echo "Docker logins and does his thing"

jobs:
  include:
    # command not working...
    # if: $TRAVIS_BRANCH = master
    - stage: build-master
      before_script: *docker_login
      name: build docker
      script:
        - docker version
        - docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
        - docker build -t $DOCKER_HUB_SLUG:$VERSION .
        - docker push $DOCKER_HUB_SLUG:$VERSION
    # command not working...
    # if: $TRAVIS_BRANCH = dev
    - stage: build-dev
      before_script: *docker_login
      name: build docker
      script:
        - docker version
        - docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
        - docker build -t $DOCKER_HUB_SLUG:$VERSION-dev .
        - docker push $DOCKER_HUB_SLUG:$VERSION-dev