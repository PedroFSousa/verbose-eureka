language: node_js

image: docker

services:
  - docker

before_install:
  - docker info
  - sudo apt-get update
  - sudo apt-get install bash grep
  - if [ -z $VERSION ]; then VERSION=$(echo $TRAVIS_COMMIT_MESSAGE | grep -oP "(?<=##)(.*)(?=##)"); fi
  - echo $VERSION

install:
  script:
    # - docker version
    # - docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
    # - docker build -t $CI_REGISTRY_IMAGE:$VERSION .
    # - docker push $CI_REGISTRY_IMAGE:$VERSION
    - docker version
    - docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
    - docker build -t $DOCKER_HUB_SLUG:$VERSION .
    - docker push $DOCKER_HUB_SLUG:$VERSION
  on:
    branch:
      - master
      - master-schedule

  script:
    # - docker version
    # - docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
    # - docker build -t $CI_REGISTRY_IMAGE:$VERSION-dev .
    # - docker push $CI_REGISTRY_IMAGE:$VERSION-dev
    - docker version
    - docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
    - docker build -t $DOCKER_HUB_SLUG:$VERSION-dev .
    - docker push $DOCKER_HUB_SLUG:$VERSION-dev
  on:
    branch:
      - dev
    except:
      - schedules

# script:
#   - docker version
#   - docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
#   - echo $TRAVIS_REPO_SLUG
#   - echo $DOCKER_HUB_SLUG
#   - docker build -t $DOCKER_HUB_SLUG:$VERSION .
#   - docker images
#   - docker push $DOCKER_HUB_SLUG:$VERSION