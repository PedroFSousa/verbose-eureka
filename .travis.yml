language: node_js

image: docker

services:
  - docker

before_install:
  - docker info
  - sudo apt-get update
  - sudo apt-get install bash grep
  - if [ -z $VERSION ]; then VERSION=$(echo $TRAVIS_COMMIT_MESSAGE | grep -oP "(?<=##)(.*)(?=##)"); fi

# script:
#   - if [ $TRAVIS_BRANCH == dev ]; then docker version && docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD && docker build -t $DOCKER_HUB_SLUG:$VERSION-dev . && docker push $DOCKER_HUB_SLUG:$VERSION-dev; fi
#   - if [ $TRAVIS_BRANCH == master ]; then docker version && docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD && docker build -t $DOCKER_HUB_SLUG:$VERSION . && docker push $DOCKER_HUB_SLUG:$VERSION; fi

# jobs:
#   - build-master
#   - build-dev

# stages:
#   - name: build
    # if: $TRAVIS_BRANCH = "master"
    # script: docker version && docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD && docker build -t $DOCKER_HUB_SLUG:$VERSION . && docker push $DOCKER_HUB_SLUG:$VERSION

# build-master:
#   stage: build
#   script:
#     - echo "BUILDING IN MASTER"
#   only:
#     - master
#     - master-schedule

# build-dev:
#   stage: build
#   script:
#     - echo "BUILDING IN DEV"
#   only:
#     - dev
#   except:
#     - schedules

deploy:
  - provider: script
    if: $TRAVIS_BRANCH = master
    script: echo "BUILDING IN MASTER"
    on:
      branches:
        only:
          - master
          - master-schedule
      tags: true

    if: $TRAVIS_BRANCH = dev
    script: echo "BUILDING IN dev"
    on:
      branches:
        only:
          - dev
        except:
          - master-schedule
      tags: true